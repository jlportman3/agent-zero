FROM agent-zero-base:local

ARG BRANCH=development

# --- NVIDIA Docker Toolkit ---
# Install NVIDIA Container Toolkit for GPU support (compatible with driver 535.230.02)
# CUDA libraries will be provided by the host through nvidia-docker runtime
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    software-properties-common \
    && curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
    && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
       sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
       tee /etc/apt/sources.list.d/nvidia-container-toolkit.list \
    && apt-get update \
    && apt-get install -y nvidia-container-toolkit \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set CUDA environment variables (will be populated by nvidia-docker runtime)
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

# Copy filesystem overlay
COPY ./fs/ /

# Copy patches directory (but won't apply them in vanilla)
COPY ./patches/ /patches/

# Make scripts executable
RUN chmod +x /ins/*.sh /exe/*.sh

# Update package list for installation scripts
RUN apt-get update

# Pre-install dependencies
RUN --mount=type=cache,target=/root/.cache \
    bash /ins/pre_install.sh "${BRANCH}"

# Copy apply_patches script (but skip it in vanilla)
COPY apply_patches.sh /apply_patches.sh

# Install Agent Zero
RUN --mount=type=cache,target=/root/.cache \
    bash /ins/install_A0.sh "${BRANCH}"

# Skip patch application in vanilla version
# RUN chmod +x /apply_patches.sh && /apply_patches.sh

# Install additional dependencies
RUN --mount=type=cache,target=/root/.cache \
    bash /ins/install_additional.sh "${BRANCH}"

# --- Install CUDA-enabled PyTorch ---
RUN --mount=type=cache,target=/root/.cache \
    . /opt/venv/bin/activate && \
    pip uninstall -y torch torchvision torchaudio && \
    uv pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install Agent Zero part 2
RUN --mount=type=cache,target=/root/.cache \
    echo "cache bust none" && bash /ins/install_A02.sh "${BRANCH}"

# Post-install
RUN --mount=type=cache,target=/root/.cache \
    bash /ins/post_install.sh "${BRANCH}"

# Make execution scripts executable
RUN chmod +x /exe/initialize.sh /exe/run_A0.sh /exe/run_searxng.sh /exe/run_tunnel_api.sh
